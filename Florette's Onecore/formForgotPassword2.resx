<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xgAAAABJRU5ErkJggg==
</value>
  </data>
</root>